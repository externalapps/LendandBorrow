{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\PaySafe\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      // Set token in API headers\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Verify token and get user data\n      const response = await api.get('/auth/me');\n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response$data$;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response2$data2;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.error) === null || _error$response2$data2 === void 0 ? void 0 : _error$response2$data2.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n  };\n  const sendOTP = async phone => {\n    try {\n      const response = await api.post('/auth/send-otp', {\n        phone\n      });\n      toast.success('OTP sent successfully!');\n      return {\n        success: true,\n        otp: response.data.otp\n      }; // Demo only\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response3$data2;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : (_error$response3$data2 = _error$response3$data.error) === null || _error$response3$data2 === void 0 ? void 0 : _error$response3$data2.message) || 'Failed to send OTP';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const verifyOTP = async (phone, otp) => {\n    try {\n      const response = await api.post('/auth/verify-otp', {\n        phone,\n        otp\n      });\n      toast.success('OTP verified successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data, _error$response4$data2;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : (_error$response4$data2 = _error$response4$data.error) === null || _error$response4$data2 === void 0 ? void 0 : _error$response4$data2.message) || 'OTP verification failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    sendOTP,\n    verifyOTP,\n    isAuthenticated: !!user,\n    isAdmin: user && ['admin@paysafe.com', 'demo@paysafe.com'].includes(user.email)\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuthStatus","token","localStorage","getItem","defaults","headers","common","response","get","data","error","console","removeItem","login","email","password","post","setItem","success","_error$response","_error$response$data","_error$response$data$","message","register","userData","_error$response2","_error$response2$data","_error$response2$data2","logout","updateUser","updatedUser","sendOTP","phone","otp","_error$response3","_error$response3$data","_error$response3$data2","verifyOTP","_error$response4","_error$response4$data","_error$response4$data2","value","isAuthenticated","isAdmin","includes","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/PaySafe/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { api } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Set token in API headers\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n      // Verify token and get user data\r\n      const response = await api.get('/auth/me');\r\n      setUser(response.data.user);\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      localStorage.removeItem('token');\r\n      delete api.defaults.headers.common['Authorization'];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      const { token, user } = response.data;\r\n\r\n      localStorage.setItem('token', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(user);\r\n\r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error?.message || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      const { token, user } = response.data;\r\n\r\n      localStorage.setItem('token', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(user);\r\n\r\n      toast.success('Registration successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error?.message || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateUser = (updatedUser) => {\r\n    setUser(updatedUser);\r\n  };\r\n\r\n  const sendOTP = async (phone) => {\r\n    try {\r\n      const response = await api.post('/auth/send-otp', { phone });\r\n      toast.success('OTP sent successfully!');\r\n      return { success: true, otp: response.data.otp }; // Demo only\r\n    } catch (error) {\r\n      const message = error.response?.data?.error?.message || 'Failed to send OTP';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const verifyOTP = async (phone, otp) => {\r\n    try {\r\n      const response = await api.post('/auth/verify-otp', { phone, otp });\r\n      toast.success('OTP verified successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error?.message || 'OTP verification failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser,\r\n    sendOTP,\r\n    verifyOTP,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user && ['admin@paysafe.com', 'demo@paysafe.com'].includes(user.email)\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}