{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: userData => api.post('/auth/register', userData),\n  getMe: () => api.get('/auth/me'),\n  sendOTP: phone => api.post('/auth/send-otp', {\n    phone\n  }),\n  verifyOTP: (phone, otp) => api.post('/auth/verify-otp', {\n    phone,\n    otp\n  })\n};\nexport const userAPI = {\n  getUsers: () => api.get('/users'),\n  getUser: userId => api.get(`/users/${userId}`),\n  updateKYC: kycData => api.put('/users/kyc', kycData),\n  updateProfile: profileData => api.put('/users/profile', profileData),\n  getDashboardSummary: () => api.get('/users/dashboard/summary')\n};\nexport const loanAPI = {\n  getLoans: params => api.get('/loans', {\n    params\n  }),\n  getLoan: loanId => api.get(`/loans/${loanId}`),\n  createLoan: loanData => api.post('/loans', loanData),\n  fundEscrow: loanId => api.post(`/loans/${loanId}/fund-escrow`),\n  acceptLoanTerms: loanId => api.post(`/loans/${loanId}/accept`),\n  makePayment: (loanId, amount) => api.post(`/loans/${loanId}/payment`, {\n    amount\n  }),\n  cancelLoan: loanId => api.post(`/loans/${loanId}/cancel`),\n  getPendingOffers: () => api.get('/loans/pending/offers'),\n  getPaymentRequirements: loanId => api.get(`/loans/${loanId}/payment-requirements`),\n  getLoanLedger: loanId => api.get(`/loans/${loanId}/ledger`),\n  getLoanBlocks: loanId => api.get(`/loans/${loanId}/blocks`)\n};\nexport const paymentAPI = {\n  processRazorpayPayment: paymentData => api.post('/payments/razorpay', paymentData),\n  createRazorpayOrder: orderData => api.post('/payments/razorpay/order', orderData),\n  verifyRazorpayPayment: verificationData => api.post('/payments/razorpay/verify', verificationData),\n  getPaymentMethods: () => api.get('/payments/methods')\n};\nexport const cibilAPI = {\n  reportToCIBIL: reportData => api.post('/mock-cibil/report', reportData),\n  getReports: params => api.get('/mock-cibil/reports', {\n    params\n  }),\n  getReport: reportId => api.get(`/mock-cibil/reports/${reportId}`),\n  updateReportStatus: (reportId, status) => api.put(`/mock-cibil/reports/${reportId}/status`, {\n    status\n  }),\n  exportReports: () => api.get('/mock-cibil/reports/export/csv', {\n    responseType: 'blob'\n  }),\n  getStatus: () => api.get('/mock-cibil/status')\n};\nexport const communicationAPI = {\n  getCommunicationHistory: loanId => api.get(`/communications/loan/${loanId}`),\n  sendCall: callData => api.post('/communications/call', callData),\n  sendSMS: smsData => api.post('/communications/sms', smsData),\n  sendEmail: emailData => api.post('/communications/email', emailData),\n  generateTTS: transcript => api.post('/communications/tts', {\n    transcript\n  }),\n  getCommunications: params => api.get('/communications', {\n    params\n  }),\n  getCommunication: communicationId => api.get(`/communications/${communicationId}`),\n  updateCommunicationStatus: (communicationId, status) => api.put(`/communications/${communicationId}/status`, {\n    status\n  })\n};\nexport const adminAPI = {\n  getDashboard: () => api.get('/admin/dashboard'),\n  runScheduler: () => api.post('/admin/scheduler/run'),\n  simulateTime: timeData => api.post('/admin/time/simulate', timeData),\n  getLoans: params => api.get('/admin/loans', {\n    params\n  }),\n  getUsers: params => api.get('/admin/users', {\n    params\n  }),\n  updateUserKYC: (userId, kycData) => api.put(`/admin/users/${userId}/kyc`, kycData),\n  forceCIBILReport: reportData => api.post('/admin/cibil/report', reportData),\n  getAuditLogs: params => api.get('/admin/audit-logs', {\n    params\n  }),\n  updateSettings: settingsData => api.put('/admin/settings', settingsData),\n  getHealth: () => api.get('/admin/health')\n};\nexport const settingsAPI = {\n  getSettings: () => api.get('/settings')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","defaults","common","window","location","href","authAPI","login","email","password","post","register","userData","getMe","get","sendOTP","phone","verifyOTP","otp","userAPI","getUsers","getUser","userId","updateKYC","kycData","put","updateProfile","profileData","getDashboardSummary","loanAPI","getLoans","params","getLoan","loanId","createLoan","loanData","fundEscrow","acceptLoanTerms","makePayment","amount","cancelLoan","getPendingOffers","getPaymentRequirements","getLoanLedger","getLoanBlocks","paymentAPI","processRazorpayPayment","paymentData","createRazorpayOrder","orderData","verifyRazorpayPayment","verificationData","getPaymentMethods","cibilAPI","reportToCIBIL","reportData","getReports","getReport","reportId","updateReportStatus","exportReports","responseType","getStatus","communicationAPI","getCommunicationHistory","sendCall","callData","sendSMS","smsData","sendEmail","emailData","generateTTS","transcript","getCommunications","getCommunication","communicationId","updateCommunicationStatus","adminAPI","getDashboard","runScheduler","simulateTime","timeData","updateUserKYC","forceCIBILReport","getAuditLogs","updateSettings","settingsData","getHealth","settingsAPI","getSettings"],"sources":["C:/Users/DELL/PaySafe/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\r\n\r\nexport const api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      delete api.defaults.headers.common['Authorization'];\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API endpoints\r\nexport const authAPI = {\r\n  login: (email, password) => api.post('/auth/login', { email, password }),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  getMe: () => api.get('/auth/me'),\r\n  sendOTP: (phone) => api.post('/auth/send-otp', { phone }),\r\n  verifyOTP: (phone, otp) => api.post('/auth/verify-otp', { phone, otp }),\r\n};\r\n\r\nexport const userAPI = {\r\n  getUsers: () => api.get('/users'),\r\n  getUser: (userId) => api.get(`/users/${userId}`),\r\n  updateKYC: (kycData) => api.put('/users/kyc', kycData),\r\n  updateProfile: (profileData) => api.put('/users/profile', profileData),\r\n  getDashboardSummary: () => api.get('/users/dashboard/summary'),\r\n};\r\n\r\nexport const loanAPI = {\r\n  getLoans: (params) => api.get('/loans', { params }),\r\n  getLoan: (loanId) => api.get(`/loans/${loanId}`),\r\n  createLoan: (loanData) => api.post('/loans', loanData),\r\n  fundEscrow: (loanId) => api.post(`/loans/${loanId}/fund-escrow`),\r\n  acceptLoanTerms: (loanId) => api.post(`/loans/${loanId}/accept`),\r\n  makePayment: (loanId, amount) => api.post(`/loans/${loanId}/payment`, { amount }),\r\n  cancelLoan: (loanId) => api.post(`/loans/${loanId}/cancel`),\r\n  getPendingOffers: () => api.get('/loans/pending/offers'),\r\n  getPaymentRequirements: (loanId) => api.get(`/loans/${loanId}/payment-requirements`),\r\n  getLoanLedger: (loanId) => api.get(`/loans/${loanId}/ledger`),\r\n  getLoanBlocks: (loanId) => api.get(`/loans/${loanId}/blocks`),\r\n};\r\n\r\nexport const paymentAPI = {\r\n  processRazorpayPayment: (paymentData) => api.post('/payments/razorpay', paymentData),\r\n  createRazorpayOrder: (orderData) => api.post('/payments/razorpay/order', orderData),\r\n  verifyRazorpayPayment: (verificationData) => api.post('/payments/razorpay/verify', verificationData),\r\n  getPaymentMethods: () => api.get('/payments/methods'),\r\n};\r\n\r\nexport const cibilAPI = {\r\n  reportToCIBIL: (reportData) => api.post('/mock-cibil/report', reportData),\r\n  getReports: (params) => api.get('/mock-cibil/reports', { params }),\r\n  getReport: (reportId) => api.get(`/mock-cibil/reports/${reportId}`),\r\n  updateReportStatus: (reportId, status) => api.put(`/mock-cibil/reports/${reportId}/status`, { status }),\r\n  exportReports: () => api.get('/mock-cibil/reports/export/csv', { responseType: 'blob' }),\r\n  getStatus: () => api.get('/mock-cibil/status'),\r\n};\r\n\r\nexport const communicationAPI = {\r\n  getCommunicationHistory: (loanId) => api.get(`/communications/loan/${loanId}`),\r\n  sendCall: (callData) => api.post('/communications/call', callData),\r\n  sendSMS: (smsData) => api.post('/communications/sms', smsData),\r\n  sendEmail: (emailData) => api.post('/communications/email', emailData),\r\n  generateTTS: (transcript) => api.post('/communications/tts', { transcript }),\r\n  getCommunications: (params) => api.get('/communications', { params }),\r\n  getCommunication: (communicationId) => api.get(`/communications/${communicationId}`),\r\n  updateCommunicationStatus: (communicationId, status) => api.put(`/communications/${communicationId}/status`, { status }),\r\n};\r\n\r\nexport const adminAPI = {\r\n  getDashboard: () => api.get('/admin/dashboard'),\r\n  runScheduler: () => api.post('/admin/scheduler/run'),\r\n  simulateTime: (timeData) => api.post('/admin/time/simulate', timeData),\r\n  getLoans: (params) => api.get('/admin/loans', { params }),\r\n  getUsers: (params) => api.get('/admin/users', { params }),\r\n  updateUserKYC: (userId, kycData) => api.put(`/admin/users/${userId}/kyc`, kycData),\r\n  forceCIBILReport: (reportData) => api.post('/admin/cibil/report', reportData),\r\n  getAuditLogs: (params) => api.get('/admin/audit-logs', { params }),\r\n  updateSettings: (settingsData) => api.put('/admin/settings', settingsData),\r\n  getHealth: () => api.get('/admin/health'),\r\n};\r\n\r\nexport const settingsAPI = {\r\n  getSettings: () => api.get('/settings'),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}